CCS PCH C Compiler, Version 4.140, 22098               18-ago-14 16:18

               Filename:   D:\Projetos\Serial\slave.lst

               ROM used:   836 bytes (3%)
                           Largest free fragment is 31928
               RAM used:   289 (19%) at main() level
                           300 (20%) worst case
               Stack:     3 worst case (2 in main + 1 for interrupts)

*
0000:  GOTO   026E
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.1
0056:  GOTO   0060
005A:  BTFSC  F9E.1
005C:  GOTO   00FE
0060:  BTFSS  F9D.5
0062:  GOTO   006C
0066:  BTFSC  F9E.5
0068:  GOTO   00BA
006C:  MOVFF  0E,00
0070:  MOVFF  0F,01
0074:  MOVFF  10,02
0078:  MOVFF  11,03
007C:  MOVFF  0C,FE9
0080:  MOVFF  07,FEA
0084:  BSF    07.7
0086:  MOVFF  08,FE1
008A:  MOVFF  09,FE2
008E:  MOVFF  0A,FD9
0092:  MOVFF  0B,FDA
0096:  MOVFF  12,FF3
009A:  MOVFF  13,FF4
009E:  MOVFF  14,FFA
00A2:  MOVFF  15,FF5
00A6:  MOVFF  16,FF6
00AA:  MOVFF  17,FF7
00AE:  MOVF   04,W
00B0:  MOVFF  06,FE0
00B4:  MOVFF  05,FD8
00B8:  RETFIE 0
.................... /* 
....................  * slave.c 
....................  * 
....................  *  Created on: 18/08/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... /* 
....................  * master.c 
....................  * 
....................  *  Created on: 18/08/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
.................... #zero_ram 
....................  
.................... #fuses HS 
.................... #use delay(clock=15MHz) 
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
....................  
.................... //defines 
.................... #define buffer_size 256 
.................... //cmd 
.................... #define cmd_parar	0x00 
.................... #define cmd_subir	0x01 
.................... #define cmd_descer	0x02 
.................... //entradas 
.................... #define bto_sobe	PIN_B0 
.................... #define bto_desce	PIN_B1 
.................... //saidas 
.................... #define saida_sobe	PIN_C0 
.................... #define saida_desce	PIN_C1 
.................... //tempos 
.................... #define debounce 100 
....................  
.................... int buffer[buffer_size]; 
.................... int line = 0; 
.................... int lido = 0; 
.................... int m_addr = 1; 
....................  
.................... short recived = FALSE; 
.................... short en_timer2 = TRUE; 
....................  
.................... #INT_RDA 
.................... void serial_isr() { 
.................... 	clear_interrupt(INT_RDA); 
.................... 	buffer[line++] = getc(); 
*
00BA:  MOVLB  1
00BC:  MOVF   x19,W
00BE:  INCF   x19,F
00C0:  CLRF   03
00C2:  ADDLW  19
00C4:  MOVWF  FE9
00C6:  MOVLW  00
00C8:  ADDWFC 03,W
00CA:  MOVWF  FEA
00CC:  BTFSS  F9E.5
00CE:  BRA    00CC
00D0:  MOVFF  FAE,FEF
.................... 	buffer[line] = '\0'; 
00D4:  CLRF   03
00D6:  MOVF   x19,W
00D8:  ADDLW  19
00DA:  MOVWF  FE9
00DC:  MOVLW  00
00DE:  ADDWFC 03,W
00E0:  MOVWF  FEA
00E2:  CLRF   FEF
.................... 	set_timer2(0); 
00E4:  CLRF   FCC
.................... 	if (en_timer2) { 
00E6:  BTFSS  x1C.1
00E8:  BRA    00F6
.................... 		en_timer2 = FALSE; 
00EA:  BCF    x1C.1
.................... 		setup_timer_2(T2_DIV_BY_16, 255, 1); 
00EC:  MOVLW  00
00EE:  IORLW  06
00F0:  MOVWF  FCA
00F2:  MOVLW  FF
00F4:  MOVWF  FCB
.................... 	} 
.................... } 
....................  
00F6:  BCF    F9E.5
00F8:  MOVLB  0
00FA:  GOTO   006C
.................... #INT_TIMER2 
.................... void timer2_isr() { 
.................... 	clear_interrupt(INT_TIMER2); 
00FE:  BCF    F9E.1
.................... 	setup_timer_2(T2_DISABLED, 255, 1); 
0100:  MOVLW  00
0102:  MOVWF  FCA
0104:  MOVLW  FF
0106:  MOVWF  FCB
.................... 	set_timer2(0); 
0108:  CLRF   FCC
.................... 	recived = TRUE; 
010A:  MOVLB  1
010C:  BSF    x1C.0
.................... } 
....................  
010E:  BCF    F9E.1
0110:  MOVLB  0
0112:  GOTO   006C
.................... int main(void) { 
*
026E:  CLRF   FF8
0270:  BCF    FD0.7
0272:  BSF    07.7
0274:  MOVLW  FE
0276:  MOVWF  00
0278:  MOVLW  06
027A:  MOVWF  01
027C:  MOVLW  02
027E:  MOVWF  FE9
0280:  MOVLW  00
0282:  MOVWF  FEA
0284:  CLRF   FEE
0286:  DECFSZ 00,F
0288:  BRA    0284
028A:  DECFSZ 01,F
028C:  BRA    0284
028E:  CLRF   FEA
0290:  CLRF   FE9
0292:  MOVLW  61
0294:  MOVWF  FAF
0296:  MOVLW  A6
0298:  MOVWF  FAC
029A:  MOVLW  90
029C:  MOVWF  FAB
029E:  MOVLB  1
02A0:  CLRF   x19
02A2:  CLRF   x1A
02A4:  MOVLW  01
02A6:  MOVWF  x1B
02A8:  BCF    x1C.0
02AA:  BSF    x1C.1
02AC:  BSF    FC1.0
02AE:  BSF    FC1.1
02B0:  BSF    FC1.2
02B2:  BCF    FC1.3
....................  
.................... 	int addr; 
.................... 	int cmd; 
....................  
.................... 	clear_interrupt(INT_TIMER2); 
02B4:  BCF    F9E.1
.................... 	set_timer2(0); 
02B6:  CLRF   FCC
.................... 	setup_timer_2(T2_DISABLED, 255, 1); 
02B8:  MOVLW  00
02BA:  MOVWF  FCA
02BC:  MOVLW  FF
02BE:  MOVWF  FCB
....................  
.................... 	set_timer0(0); 
02C0:  CLRF   FD7
02C2:  CLRF   FD6
.................... 	setup_timer_0(T0_EXT_H_TO_L); 
02C4:  MOVLW  B0
02C6:  MOVWF  FD5
....................  
.................... 	clear_interrupt(INT_RDA); 
.................... 	enable_interrupts(INT_RDA); 
02C8:  BSF    F9D.5
.................... 	enable_interrupts(INT_TIMER2); 
02CA:  BSF    F9D.1
.................... 	enable_interrupts(GLOBAL); 
02CC:  MOVLW  C0
02CE:  IORWF  FF2,F
....................  
.................... 	output_low(saida_sobe); 
02D0:  BCF    F94.0
02D2:  BCF    F8B.0
.................... 	output_low(saida_desce); 
02D4:  BCF    F94.1
02D6:  BCF    F8B.1
....................  
.................... 	while (TRUE) { 
.................... 		if (recived) { 
02D8:  BTFSS  x1C.0
02DA:  BRA    0340
.................... 			recived = FALSE; 
02DC:  BCF    x1C.0
.................... 			addr = buffer[0] - 48; 
02DE:  MOVLW  30
02E0:  SUBWF  19,W
02E2:  MOVWF  x1D
.................... 			cmd = buffer[1] - 48; 
02E4:  MOVLW  30
02E6:  SUBWF  1A,W
02E8:  MOVWF  x1E
.................... 			buffer[0] = '\0'; 
02EA:  CLRF   19
.................... 			line = 0; 
02EC:  CLRF   x19
.................... 			en_timer2 = TRUE; 
02EE:  BSF    x1C.1
....................  
.................... 			if (m_addr == addr) { 
02F0:  MOVF   x1D,W
02F2:  SUBWF  x1B,W
02F4:  BNZ   0340
.................... 				if (cmd == cmd_subir) 
02F6:  DECFSZ x1E,W
02F8:  BRA    0300
.................... 					output_high(saida_sobe); 
02FA:  BCF    F94.0
02FC:  BSF    F8B.0
.................... 				else if (cmd == cmd_descer) 
02FE:  BRA    0318
0300:  MOVF   x1E,W
0302:  SUBLW  02
0304:  BNZ   030C
.................... 					output_high(saida_desce); 
0306:  BCF    F94.1
0308:  BSF    F8B.1
.................... 				else if (cmd == cmd_parar) { 
030A:  BRA    0318
030C:  MOVF   x1E,F
030E:  BNZ   0318
.................... 					output_low(saida_sobe); 
0310:  BCF    F94.0
0312:  BCF    F8B.0
.................... 					output_low(saida_desce); 
0314:  BCF    F94.1
0316:  BCF    F8B.1
.................... 				} 
.................... 				printf("%u%lu", m_addr, get_timer0()); 
0318:  MOVF   FD6,W
031A:  MOVFF  FD7,03
031E:  MOVWF  x1F
0320:  MOVFF  FD7,120
0324:  MOVFF  11B,121
0328:  MOVLW  1B
032A:  MOVWF  x22
032C:  MOVLB  0
032E:  BRA    0142
0330:  MOVLW  10
0332:  MOVWF  FE9
0334:  MOVFF  120,122
0338:  MOVFF  11F,121
033C:  BRA    01C2
033E:  MOVLB  1
.................... 			} 
.................... 		} 
.................... 	} 
0340:  BRA    02D8
....................  
.................... 	return 0; 
0342:  MOVLW  00
0344:  MOVWF  01
.................... } 
0346:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
