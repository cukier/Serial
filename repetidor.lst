CCS PCH C Compiler, Version 4.140, 22098               12-ago-14 11:17

               Filename:   D:\Projetos\Serial\repetidor.lst

               ROM used:   416 bytes (1%)
                           Largest free fragment is 32348
               RAM used:   283 (18%) at main() level
                           286 (19%) worst case
               Stack:     2 worst case (1 in main + 1 for interrupts)

*
0000:  GOTO   0134
*
0008:  MOVWF  04
000A:  MOVFF  FD8,05
000E:  MOVFF  FE0,06
0012:  MOVLB  0
0014:  MOVFF  FE9,0C
0018:  MOVFF  FEA,07
001C:  MOVFF  FE1,08
0020:  MOVFF  FE2,09
0024:  MOVFF  FD9,0A
0028:  MOVFF  FDA,0B
002C:  MOVFF  FF3,12
0030:  MOVFF  FF4,13
0034:  MOVFF  FFA,14
0038:  MOVFF  FF5,15
003C:  MOVFF  FF6,16
0040:  MOVFF  FF7,17
0044:  MOVFF  00,0E
0048:  MOVFF  01,0F
004C:  MOVFF  02,10
0050:  MOVFF  03,11
0054:  BTFSS  F9D.5
0056:  GOTO   0060
005A:  BTFSC  F9E.5
005C:  GOTO   00AE
0060:  MOVFF  0E,00
0064:  MOVFF  0F,01
0068:  MOVFF  10,02
006C:  MOVFF  11,03
0070:  MOVFF  0C,FE9
0074:  MOVFF  07,FEA
0078:  BSF    07.7
007A:  MOVFF  08,FE1
007E:  MOVFF  09,FE2
0082:  MOVFF  0A,FD9
0086:  MOVFF  0B,FDA
008A:  MOVFF  12,FF3
008E:  MOVFF  13,FF4
0092:  MOVFF  14,FFA
0096:  MOVFF  15,FF5
009A:  MOVFF  16,FF6
009E:  MOVFF  17,FF7
00A2:  MOVF   04,W
00A4:  MOVFF  06,FE0
00A8:  MOVFF  05,FD8
00AC:  RETFIE 0
.................... /* 
....................  * repetidor.c 
....................  * 
....................  *  Created on: 12/08/2014 
....................  *      Author: cuki 
....................  */ 
....................  
.................... #include<18F252.h> 
.................... //////// Standard Header file for the PIC18F252 device //////////////// 
.................... #device PIC18F252 
.................... #list 
....................  
.................... #zero_ram 
....................  
.................... #fuses HS 
.................... #use delay(clock=15MHz) 
0108:  MOVLW  01
010A:  MOVWF  FEA
010C:  MOVLW  1B
010E:  MOVWF  FE9
0110:  MOVF   FEF,W
0112:  BZ    0130
0114:  MOVLW  04
0116:  MOVWF  01
0118:  CLRF   00
011A:  DECFSZ 00,F
011C:  BRA    011A
011E:  DECFSZ 01,F
0120:  BRA    0118
0122:  MOVLW  DC
0124:  MOVWF  00
0126:  DECFSZ 00,F
0128:  BRA    0126
012A:  NOP   
012C:  DECFSZ FEF,F
012E:  BRA    0114
0130:  GOTO   0196 (RETURN)
.................... #use rs232(baud=9600,xmit=pin_c6,rcv=pin_c7) 
....................  
.................... #define buffer_size 256 
....................  
.................... int buffer[buffer_size]; 
.................... int line = 0; 
....................  
.................... #INT_RDA 
.................... void serial_isr() { 
.................... 	clear_interrupt(INT_RDA); 
.................... 	buffer[line++] = getc(); 
*
00AE:  MOVLB  1
00B0:  MOVF   x19,W
00B2:  INCF   x19,F
00B4:  CLRF   03
00B6:  ADDLW  19
00B8:  MOVWF  FE9
00BA:  MOVLW  00
00BC:  ADDWFC 03,W
00BE:  MOVWF  FEA
00C0:  BTFSS  F9E.5
00C2:  BRA    00C0
00C4:  MOVFF  FAE,FEF
.................... 	buffer[line] = '\0'; 
00C8:  CLRF   03
00CA:  MOVF   x19,W
00CC:  ADDLW  19
00CE:  MOVWF  FE9
00D0:  MOVLW  00
00D2:  ADDWFC 03,W
00D4:  MOVWF  FEA
00D6:  CLRF   FEF
.................... } 
....................  
00D8:  BCF    F9E.5
00DA:  MOVLB  0
00DC:  GOTO   0060
.................... int main(void) { 
*
0134:  CLRF   FF8
0136:  BCF    FD0.7
0138:  BSF    07.7
013A:  MOVLW  FE
013C:  MOVWF  00
013E:  MOVLW  06
0140:  MOVWF  01
0142:  MOVLW  02
0144:  MOVWF  FE9
0146:  MOVLW  00
0148:  MOVWF  FEA
014A:  CLRF   FEE
014C:  DECFSZ 00,F
014E:  BRA    014A
0150:  DECFSZ 01,F
0152:  BRA    014A
0154:  CLRF   FEA
0156:  CLRF   FE9
0158:  MOVLW  61
015A:  MOVWF  FAF
015C:  MOVLW  A6
015E:  MOVWF  FAC
0160:  MOVLW  90
0162:  MOVWF  FAB
0164:  MOVLB  1
0166:  CLRF   x19
0168:  BSF    FC1.0
016A:  BSF    FC1.1
016C:  BSF    FC1.2
016E:  BCF    FC1.3
....................  
.................... 	clear_interrupt(INT_RDA); 
.................... 	enable_interrupts(INT_RDA); 
0170:  BSF    F9D.5
.................... 	enable_interrupts(GLOBAL); 
0172:  MOVLW  C0
0174:  IORWF  FF2,F
....................  
.................... 	while (TRUE) { 
.................... 		if (buffer[0] != '\0') { 
0176:  MOVF   19,F
0178:  BZ    018A
.................... 			printf("%s", buffer); 
017A:  CLRF   FEA
017C:  MOVLW  19
017E:  MOVWF  FE9
0180:  MOVLB  0
0182:  BRA    00E0
.................... 			buffer[0] = '\0'; 
0184:  CLRF   19
.................... 			line = 0; 
0186:  MOVLB  1
0188:  CLRF   x19
.................... 		} 
.................... 		delay_ms(1500); 
018A:  MOVLW  06
018C:  MOVWF  x1A
018E:  MOVLW  FA
0190:  MOVWF  x1B
0192:  MOVLB  0
0194:  BRA    0108
0196:  MOVLB  1
0198:  DECFSZ x1A,F
019A:  BRA    018E
.................... 	} 
019C:  BRA    0176
....................  
.................... 	return 0; 
019E:  MOVLW  00
01A0:  MOVWF  01
.................... } 
01A2:  SLEEP 

Configuration Fuses:
   Word  1: 2200   HS NOOSCSEN
   Word  2: 0E0E   PUT BROWNOUT BORV20 NOWDT WDT128
   Word  3: 0100   CCP2C1
   Word  4: 0081   STVREN NOLVP NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
